1. МИНИ-API ДЛЯ УПРАВЛЕНИЯ ЗАДАЧАМИ
Цель: Создать приложение с CRUD операциями для управления задачами (to-do list).

Требования:

Инициализируй новый проект с npm init и установи Express.
Приложение должно поддерживать следующие маршруты:
GET /tasks — возвращает список всех задач (JSON).
GET /tasks/:id — возвращает конкретную задачу по ID.
POST /tasks — добавляет новую задачу (принимает JSON с полями: title, description).
PUT /tasks/:id — обновляет задачу по ID (принимает JSON с полями: title, description).
DELETE /tasks/:id — удаляет задачу по ID.
Раздели код на:
Папку routes для маршрутов.
Папку controllers для логики работы с задачами.
Основной файл приложения app.js.

2. ПРОСТАЯ КНИГА КОНТАКТОВ
Цель: Создать мини-приложение для хранения контактов.

Требования:

Инициализируй проект и установи Express.
Реализуй следующие маршруты:
GET /contacts — список всех контактов.
GET /contacts/:id — получить конкретный контакт по ID.
POST /contacts — создать новый контакт (поля: name, phone, email).
PUT /contacts/:id — обновить контакт по ID.
DELETE /contacts/:id — удалить контакт по ID.
Используй встроенный express.json() для обработки тела запросов.
Храни контакты в массиве.
Раздели приложение на:
Папку routes для маршрутов.
Папку controllers для логики обработки.

3. ПРОСТОЕ ПРИЛОЖЕНИЕ ДЛЯ ЗАМЕТОК
Цель: Создать приложение для управления заметками.

Требования:

Инициализируй проект и установи Express.
Реализуй следующие маршруты:
GET /notes — список всех заметок.
GET /notes/:id — получить конкретную заметку по ID.
POST /notes — создать новую заметку (поля: title, content).
PUT /notes/:id — обновить заметку по ID.
DELETE /notes/:id — удалить заметку по ID.
Сохраняй данные о заметках в массиве.
Раздели приложение на routes и controllers.

4. ПРИЛОЖЕНИЕ ДЛЯ ПРОСМОТРА ПРОДУКТОВ
Цель: Создать простое приложение для управления списком товаров.

Требования:

Инициализируй проект и установи Express.
Реализуй следующие маршруты:
GET /products — список всех товаров.
GET /products/:id — детальная информация о товаре.
POST /products — добавление нового товара (поля: name, price).
PUT /products/:id — редактирование информации о товаре.
DELETE /products/:id — удаление товара.
Храни товары в массиве.
Раздели приложение на:
Папку routes для маршрутов.
Папку controllers для обработки запросов.
5. Приложение с пользовательскими отзывами
Цель: Создать приложение для управления отзывами пользователей.

Требования:

Инициализируй проект и установи Express.
Реализуй следующие маршруты:
GET /reviews — список всех отзывов.
GET /reviews/:id — детальная информация о конкретном отзыве.
POST /reviews — добавление нового отзыва (поля: author, content).
PUT /reviews/:id — обновление отзыва.
DELETE /reviews/:id — удаление отзыва.
Храни отзывы в массиве.
Раздели код на:
Папку routes для маршрутов.
Папку controllers для логики работы с отзывами.